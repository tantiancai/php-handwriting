<!doctype html>
<html>
  <head>
    <title>Canvas测试</title>
    <meta charset="utf-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta name="viewport" content="width=500, initial-scale=1">
    <link rel="stylesheet" href="css/jquery.mobile.css" />
    <!--[if lt IE 9]>
    <script type="text/javascript" src="js/uuCanvas.js"></script>
    <![endif]-->
    <script type="text/javascript" src="js/jquery.js"></script>
    <script type="text/javascript" src="js/jquery.mobile.js"></script>

<script type="text/javascript">
//类声明
var Character = function (strokes)
{
    this.s = new Array();
    this.width = 0;
    this.height = 0;
    this.left = 0;
    this.top = 0;

    if (typeof(s) !== "undefined")
    {
        this.s = this.s.concat(strokes);
    }
}

var Stroke = function (points)
{
    this.p = new Array();

    if (typeof(p) !== "undefined")
    {
        this.p = this.p.concat(points);
    }
}

var Point = function (x, y)
{
    this.x = -1;
    this.y = -1;

    if (typeof(x) !== "undefined")
    {
        this.x = x;
        this.y = y;
    }
}
//end 类声明

var TYPE_UNKNOWN = -1;
var TYPE_RECOGNIZE = 1;
var TYPE_LEARN = 2;
var TYPE_GET_CHARS = 3;
var TYPE_GET_WRITINGS = 4;
var TYPE_DEL_WRITINGS = 5;
var TRAINTYPE_UNICODE = 4;
var TRAINTYPE_RANDOM = 5;
var MSG_OK = 1;
var canvas, context, tool, canvasOffset;

//入口函数
function xcanvas()
{
	try
	{
		//获取Canvas元素
		canvasOffset = $('#tomoe-canvas').offset();
		canvas = document.getElementById('tomoe-canvas');
		context = canvas.getContext('2d');
	}
	catch (e)
	{
		//alert("此浏览器不支持HTML5");
		return;
	}

	context.lineWidth = 4;
	context.lineCap = "round";
	context.lineJoin = "round";
	context.strokeStyle  = "orange";

	//初始化画笔
    tool = new tool_pencil();

	//添加mousedown, mousemove, mouseup, mouseout, mousecancel等事件
	//同时支持触摸设备的touch事件
	$('#tomoe-canvas').bind('vmousedown', ev_canvas);
	$('#tomoe-canvas').bind('vmousemove', ev_canvas);
	$('#tomoe-canvas').bind('vmouseup', ev_canvas);
	$('#tomoe-canvas').bind('vmouseout', ev_canvas);
    $('#tomoe-canvas').bind('select', function(){e.preventDefault();});
	//$('#tomoe-canvas').bind('vmousecancel', ev_canvas);
	//防止网页滑动
	$(document).bind('touchmove', function(e){e.preventDefault();})

}

//画笔类
function tool_pencil ()
{
	var tool = this;
	//是否在书写
	this.isWriting = false;
	//是否需要提交数据
    this.needSubmit = false;

	//mousedown事件
	this.vmousedown = function (ev)
	{
		//开始路径
		context.beginPath();
		//不保留笔迹地移动（提笔）
		context.moveTo(ev._x, ev._y);
		//正在书写
		tool.isWriting = true;
	};

	//mousemove事件
	this.vmousemove = function (ev)
	{
		//正在书写
		if (tool.isWriting == true)
		{
			//画直线
			context.lineTo(ev._x, ev._y);
			//显示笔迹
			context.stroke();
		}
	};
	
	//mouseup事件
	this.vmouseup = function (ev)
	{
		//正在书写
		if (tool.isWriting = true)
		{
			//显示笔迹
			tool.vmousemove(ev);
			//停止书写
			tool.isWriting = false;
		}
	};

	//mouseout事件
	this.vmouseout = function (ev)
	{
		//停止书写
		tool.isWriting = false;
	};

	//mousecancel事件
	this.vmousecancel = function (ev)
	{
		//停止书写
		tool.isWriting = false;
	};
}

//事件句柄
function ev_canvas (ev)
{
	//取得位置
	var pos = GetPosition(ev);
	
	//触发事件
	var func = tool[ev.type];
	if (func)
	{
		func(pos);
	}
}

//获取事件的坐标
function GetPosition(e)
{
	e._x = e.pageX - canvasOffset.left;
	e._y = e.pageY - canvasOffset.top;
    return e;
}

$(document).ready(function()
{
	//尝试初始化
	xcanvas();
	//初始化失败，浏览器不支持Canvas
	if (typeof(uu) == "undefined" && !context)
	{
		//加载兼容js脚本
		var js = document.createElement('script');
        js.setAttribute('type', 'text/javascript');
        js.setAttribute('src', 'js/uuCanvas.js');
        document.getElementsByTagName('head')[0].appendChild(js);
		//$.getScript('js/uuCanvas.js');
	}
});

    </script>
    <style type="text/css">
      canvas { border: 1px solid black; }
    </style>
  </head>
  <body>
    <canvas id="tomoe-canvas" width="300" height="300"></canvas>
  </body>
</html>