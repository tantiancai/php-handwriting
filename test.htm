<!DOCTYPE html><html><head><meta charset="utf-8" />
<title>Hello HTML5::Canvas world</title>
<link rel="stylesheet" href="jquery.mobile-1.1.0-rc.1.min.css" />
<script src="jquery-1.7.1.min.js"></script>
<script src="jquery.mobile-1.1.0-rc.1.min.js"></script>
<!--[if lt IE 9]>
<script src="uuCanvas.js"></script>
<![endif]-->
    <script type="text/javascript">
//获取事件的坐标
function GetPosition(e)
{
	var pos = e.target.offset();
	e._x = e.pageX - pos.left;
	e._y = e.pageY - pos.right;
    return e;
}

//判断事件是否支持
function isEventSupported(eventName)
{
   	var TAGNAMES = {
     	'select':'input',
		'change':'input',
      	'submit':'form',
		'reset':'form',
      	'error':'img',
		'load':'img',
		'abort':'img'
   	};
    var el = document.createElement(TAGNAMES[eventName] || 'div');
    eventName = 'on' + eventName;
    var isSupported = (eventName in el);
    if (!isSupported)
	{
		el.setAttribute(eventName, 'return;');
        isSupported = typeof el[eventName] == 'function';
    }
    el = null;
    return isSupported;
}

//添加事件
//obj:对象；strEvent:事件（字符串）；func:函数
function AddEvent(obj, strEvent, func)
{
	if(window.addEventListener)
	{
		obj.addEventListener(strEvent, func, false);
	}
	//适用于IE
	else
	{
		obj.attachEvent("on" + strEvent, func);
	}
}


	var canvas, context, tool;

	function xcanvas()
	{
		try
		{
			// Find the canvas element.
			canvas = document.getElementById('tomoe-canvas');
		    context = canvas.getContext('2d');
		}
		catch (e)
		{
			//alert("此浏览器不支持HTML5");
			return;
		}

		context.lineWidth = 4;
		context.lineCap = "round";
		context.lineJoin = "round";
		context.strokeStyle  = "orange"; 

		// Pencil tool instance.
	    tool = new tool_pencil();

		// Attach the mousedown, mousemove and mouseup event listeners.
		canvas.bind('vmousedown', ev_canvas);
		canvas.bind('vmousemove', ev_canvas);
		canvas.bind('vmouseup', ev_canvas);
		canvas.bind('vmouseover', ev_canvas);
	}

	// This painting tool works like a drawing pencil which tracks the mouse 
	// movements.
	function tool_pencil ()
	{
		var tool = this;
		this.started = false;

		// This is called when you start holding down the mouse button.
		// This starts the pencil drawing.
		this.mousedown = function (ev)
		{
			context.beginPath();
			context.moveTo(ev._x, ev._y);
			tool.started = true;
		};

		this.touchstart = function (ev)
		{
			
		}

		// This function is called every time you move the mouse. Obviously, it only 
		// draws if the tool.started state is set to true (when you are holding down 
		// the mouse button).
		this.mousemove = function (ev)
		{
			if (tool.started)
			{
				context.lineTo(ev._x, ev._y);
				context.stroke();
			}
		};

		// This is called when you release the mouse button.
		this.mouseup = function (ev)
		{
			if (tool.started)
			{
				tool.mousemove(ev);
				tool.started = false;
			}
		};

		// This is called when you release the mouse button.
		this.mouseout = function (ev)
		{
			if (tool.started)
			{
				//tool.mousemove(ev);
				tool.started = false;
			}
		};
  }

  // The general-purpose event handler. This function just determines the mouse 
  // position relative to the canvas element.
	function ev_canvas (ev)
	{
		//取得位置
	    var pos = GetPosition(ev);
	
		// Call the event handler of the tool.
	    var func = tool[ev.type];
	    alert(ev.type);
		if (func)
		{
			func(pos);
	    }
	}


	AddEvent(window, 'load', function(){xcanvas();});


      function draw(){
        var canvas = document.getElementById('tomoe-canvas');
		
		
        if (canvas.getContext){
          var ctx = canvas.getContext('2d');
		  var img = new Image();  
   img.onload = function(){  
   ctx.drawImage(img,0,0);  
		        ctx.beginPath(); 
	ctx.lineWidth = 4;
	ctx.lineCap = "round";
	ctx.lineJoin = "round";
      ctx.moveTo(30,100);  
      ctx.lineTo(70,66);  
      ctx.lineTo(103,76);  
      ctx.lineTo(170,15);  
	  ctx.strokeStyle  = "orange";  
      ctx.stroke();  
	}  
    img.src = 'http://www.zdic.net/pic/300/cn/1/8C08.gif';
        }
		else
		{
			alert("不支持Canvas");
		}
      }
    </script>
    <style type="text/css">
      canvas { border: 1px solid black; }
    </style>
  </head>
  <body>
    <canvas id="tomoe-canvas" width="300" height="300"></canvas>
  </body>
</html>