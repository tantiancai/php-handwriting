<!DOCTYPE html>
<html>
  <head>
    <title>Canvas tutorial</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<!--[if lt IE 9]>
    <script type="text/javascript" src="excanvas.js"></script>
    <![endif]-->
    <script type="text/javascript">
//获取事件的坐标
function GetPosition(e)
{
    var evt = (e) ? e : ((window.event) ? window.event : null);
    var left = 0;
    var top = 0;

	// Firefox
	if (evt.layerX || evt.layerX == 0)
	{
      left = evt.layerX;
      top = evt.layerY;
    }
	// IE
	else if (evt.offsetX || evt.offsetX == 0)
	{ 
      left = evt.offsetX;
      top = evt.offsetY;
    }

    return {
        x: left,
        y: top
    };
}

//判断事件是否支持
function isEventSupported(eventName)
{
   	var TAGNAMES = {
     	'select':'input',
		'change':'input',
      	'submit':'form',
		'reset':'form',
      	'error':'img',
		'load':'img',
		'abort':'img'
   	};
    var el = document.createElement(TAGNAMES[eventName] || 'div');
    eventName = 'on' + eventName;
    var isSupported = (eventName in el);
    if (!isSupported)
	{
		el.setAttribute(eventName, 'return;');
        isSupported = typeof el[eventName] == 'function';
    }
    el = null;
    return isSupported;
}

//添加事件
//obj:对象；strEvent:事件（字符串）；func:函数
function AddEvent(obj, strEvent, func)
{
	if(window.addEventListener)
	{
		obj.addEventListener(strEvent, func, false);
	}
	//适用于IE
	else
	{
		obj.attachEvent("on" + strEvent, func);
	}
}


  var canvas, context, tool;

	function init ()
	{
    // Find the canvas element.
    canvas = document.getElementById('tomoe-canvas');
    if (!canvas)
	{
      alert('Error: I cannot find the canvas element!');
      return;
    }

    if (!canvas.getContext)
	{
      alert('Error: no canvas.getContext!');
      return;
    }

    // Get the 2D canvas context.
    context = canvas.getContext('2d');
    if (!context)
	{
      alert('Error: failed to getContext!');
      return;
    }

	context.lineWidth = 4;
	context.lineCap = "round";
	context.lineJoin = "round";
	context.strokeStyle  = "orange"; 

    // Pencil tool instance.
    tool = new tool_pencil();

    // Attach the mousedown, mousemove and mouseup event listeners.
	AddEvent(canvas, 'mousedown', ev_canvas);
	AddEvent(canvas, 'mousemove', ev_canvas);
	AddEvent(canvas, 'mouseup', ev_canvas);
	AddEvent(canvas, 'mouseout', ev_canvas);
  }

  // This painting tool works like a drawing pencil which tracks the mouse 
  // movements.
	function tool_pencil ()
	{
		var tool = this;
		this.started = false;

		// This is called when you start holding down the mouse button.
		// This starts the pencil drawing.
		this.mousedown = function (ev)
		{
			context.beginPath();
			context.moveTo(ev.x, ev.y);
			tool.started = true;
		};

		// This function is called every time you move the mouse. Obviously, it only 
		// draws if the tool.started state is set to true (when you are holding down 
		// the mouse button).
		this.mousemove = function (ev)
		{
			if (tool.started)
			{
				context.lineTo(ev.x, ev.y);
				context.stroke();
			}
		};

		// This is called when you release the mouse button.
		this.mouseup = function (ev)
		{
			if (tool.started)
			{
				tool.mousemove(ev);
				tool.started = false;
			}
		};

		// This is called when you release the mouse button.
		this.mouseout = function (ev)
		{
			if (tool.started)
			{
				//tool.mousemove(ev);
				tool.started = false;
			}
		};
  }

  // The general-purpose event handler. This function just determines the mouse 
  // position relative to the canvas element.
	function ev_canvas (ev)
	{
		//取得位置
	    var pos = GetPosition(ev);
	
		// Call the event handler of the tool.
	    var func = tool[ev.type];
		if (func)
		{
		  func(pos);
	    }
	}

      function draw(){
        var canvas = document.getElementById('tomoe-canvas');
		
		
        if (canvas.getContext){
          var ctx = canvas.getContext('2d');
		  var img = new Image();  
   img.onload = function(){  
   ctx.drawImage(img,0,0);  
		        ctx.beginPath(); 
	ctx.lineWidth = 4;
	ctx.lineCap = "round";
	ctx.lineJoin = "round";
      ctx.moveTo(30,100);  
      ctx.lineTo(70,66);  
      ctx.lineTo(103,76);  
      ctx.lineTo(170,15);  
	  ctx.strokeStyle  = "orange";  
      ctx.stroke();  
	}  
    img.src = 'http://www.zdic.net/pic/300/cn/1/8C08.gif';
        }
		else
		{
			alert("不支持Canvas");
		}
      }
    </script>
    <style type="text/css">
      canvas { border: 1px solid black; }
    </style>
  </head>
  <body onload="init()">
    <canvas id="tomoe-canvas" width="300" height="300">不支持Canvas</canvas>
  </body>
</html>